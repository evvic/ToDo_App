[{"C:\\Users\\javi0\\Documents\\practicalWork\\practical-work-t02\\frontend\\src\\index.js":"1","C:\\Users\\javi0\\Documents\\practicalWork\\practical-work-t02\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\javi0\\Documents\\practicalWork\\practical-work-t02\\frontend\\src\\App.js":"3","C:\\Users\\javi0\\Documents\\practicalWork\\practical-work-t02\\frontend\\src\\components\\ToDoList.js":"4","C:\\Users\\javi0\\Documents\\practicalWork\\practical-work-t02\\frontend\\src\\components\\DropdownMenu.js":"5","C:\\Users\\javi0\\Documents\\practicalWork\\practical-work-t02\\frontend\\src\\components\\AddItem.js":"6","C:\\Users\\javi0\\Documents\\practicalWork\\practical-work-t02\\frontend\\src\\components\\pages\\Home.js":"7","C:\\Users\\javi0\\Documents\\practicalWork\\practical-work-t02\\frontend\\src\\components\\Hero.js":"8","C:\\Users\\javi0\\Documents\\practicalWork\\practical-work-t02\\frontend\\src\\components\\Button.js":"9"},{"size":502,"mtime":1609203558036,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":691,"mtime":1609210950642,"results":"13","hashOfConfig":"11"},{"size":1081,"mtime":1609291001645,"results":"14","hashOfConfig":"11"},{"size":2009,"mtime":1609211136398,"results":"15","hashOfConfig":"11"},{"size":5296,"mtime":1609211053457,"results":"16","hashOfConfig":"11"},{"size":199,"mtime":1609211660652,"results":"17","hashOfConfig":"11"},{"size":718,"mtime":1609211170982,"results":"18","hashOfConfig":"11"},{"size":1082,"mtime":1609211093123,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1knh6gp",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\javi0\\Documents\\practicalWork\\practical-work-t02\\frontend\\src\\index.js",["45"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n",["46","47"],"C:\\Users\\javi0\\Documents\\practicalWork\\practical-work-t02\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\javi0\\Documents\\practicalWork\\practical-work-t02\\frontend\\src\\App.js",["48","49","50","51","52","53","54"],"import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nimport DropdownMenu from './components/DropdownMenu';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './components/pages/Home';\nimport ToDoList from './components/ToDoList';\n\n/*\nHOW TO REVERT TO A PREVIOUS COMMIT:\ngit add .\ngit revert --no-commit 0766c053..HEAD\ngit commit\n*/\n\n\nfunction App() {\n  return (\n    <>\n      <Router>\n  \n      {//<DropdownMenu />\n      }\n      {/* <Switch>\n        <Route path ='/' exact component={Home} />\n      </Switch> */}\n      <ToDoList />  \n        <h1>in temp navBar</h1>\n      </Router>\n    </>\n  );\n}\n\n\n\n\n\n\nexport default App;\n","C:\\Users\\javi0\\Documents\\practicalWork\\practical-work-t02\\frontend\\src\\components\\ToDoList.js",["55","56","57","58"],"import React, {useEffect, useState} from 'react';\r\nimport './ToDoList.css';\r\nimport AddItem from './AddItem';\r\n//import React, { useEffect, useState } from \"react\";\r\n\r\n\r\n//props are READ-ONLY\r\n\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n  \r\n    // Similar to componentDidMount and componentDidUpdate:\r\n    useEffect(async () => {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      const item = data.results;\r\n      setData(item);\r\n      setLoading(false);\r\n    }, []);\r\n  \r\n    return { data, loading };\r\n    console.log(data);\r\n  };\r\n\r\n\r\nfunction ToDoList() {\r\n     //this is for \r\n    const { data, loading } = useFetch(\"http://localhost:5050/task/\");\r\n\r\n    \r\n    return(\r\n        <div className='ToDoListy'>\r\n            <AddItem data={data}/>\r\n            \r\n            \r\n        </div>\r\n    );\r\n    /*\r\n     \r\n    {\r\n        this.state.data.map((items)=>\r\n        <div><span>{items.text}</span></div>)\r\n    }\r\n    */\r\n}\r\n\r\nexport default ToDoList;\r\n","C:\\Users\\javi0\\Documents\\practicalWork\\practical-work-t02\\frontend\\src\\components\\DropdownMenu.js",["59","60","61","62"],"import './DropdownMenu.css';\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction DropdownMenu(props) {\r\n  //NavItem Functions\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const setClassName = (strang, identifier) => {\r\n    const classArr = [strang];\r\n    if (open) classArr.push(`opened-${identifier}`)\r\n    else classArr.push(`closed-${identifier}`)\r\n    return classArr.join(' ')\r\n  }\r\n\r\n  //DropdownItem\r\n  const [activeMenu, setActiveMenu] = useState('main');\r\n  const [menuHeight, setMenuHeight] = useState(null);\r\n  const dropdownRef = useRef(null);\r\n\r\n  const dropdownStyle = (open) => ({\r\n    //visibility: (open) ? `visible` : `hidden`,\r\n    opacity: (open) ? `1` : `0`,\r\n    height: (open) ? `200px` : `0px`,\r\n    /*the height = 200px is a temp fix, can't get menuHeight to work :( */\r\n  });\r\n\r\n  useEffect(() => {\r\n    setMenuHeight(dropdownRef.current?.firstChild.offsetHeight)\r\n  }, [])\r\n\r\n  function calcHeight(el) {\r\n    const height = el.offsetHeight;\r\n    setMenuHeight(height);\r\n    return height;\r\n  }\r\n\r\n\r\n  function DropdownItem(props) {\r\n    return (\r\n      <a href=\"#\" className=\"menu-item\" onClick={() => props.goToMenu && setActiveMenu(props.goToMenu)}>\r\n        <span className=\"icon-button\">{props.leftIcon}</span>\r\n        {props.children}\r\n        <span className=\"icon-right\">{props.rightIcon}</span>\r\n      </a>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <li className=\"nav-item\">\r\n        <a href=\"#\" className=\"icon-button\" onClick={() => setOpen(!open)}>\r\n          <div className={setClassName(\"hamburger\", 0)}><div></div></div>\r\n        </a>\r\n        <div className={setClassName(\"dropdown\", 1)} onEnter={calcHeight} style={dropdownStyle(open)}>\r\n          <DropdownItem leftIcon=\"🧫\" rightIcon=\"❗\">Order Online</DropdownItem>\r\n          <DropdownItem leftIcon=\"🧉\">Drinks</DropdownItem>\r\n          <DropdownItem leftIcon=\"📍\">Location</DropdownItem>\r\n        </div>\r\n      </li>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropdownMenu;\r\n","C:\\Users\\javi0\\Documents\\practicalWork\\practical-work-t02\\frontend\\src\\components\\AddItem.js",["63","64"],"import React, {useState, useReducer} from 'react';\r\nimport './ToDoList.css';   \r\n//import ListItem from './ListItem.js'\r\n\r\nconst AddItem = props => {\r\n\r\n    \r\n\r\n    function ListItem(props) {\r\n\r\n        const [trashed, setTrashed] = useState(false);\r\n\r\n        const HandleTrash = () => {\r\n            setTrashed(true);\r\n            console.log(\"in HandleTrash\");\r\n            console.log(props.item.id);\r\n\r\n            if(itemsdo.length > 0) {\r\n                //decrement preceding IDs\r\n                /*\r\n                for(var j = props.item.id; j < itemsdo.length; j++) {\r\n                    console.log(\"in for loop\");\r\n                    console.log( itemsdo[j].id);\r\n                    itemsdo[j].id = itemsdo[j].id - 1;\r\n                }\r\n                */\r\n                \r\n                itemsdo[props.item.id].date_completed = new Date();\r\n\r\n                itemsdone.unshift(itemsdo[props.item.id]); //add to done array 1st\r\n\r\n                /*\r\n                setDoneItems([ ...itemsdone, {\r\n                    id: itemsdo[props.item.id].id,\r\n                    text: itemsdo[props.item.id].text,\r\n                    date_created: itemsdo[props.item.id].date_created,\r\n                    date_completed: itemsdo[props.item.id].date_completed,\r\n                }])\r\n                */\r\n\r\n                //itemsdo.splice(props.item.id, 1);\r\n            }\r\n            else {\r\n                console.log(\"itemsdo is empty\");\r\n            }\r\n            console.log(\"leaving handle\");\r\n        }\r\n\r\n        \r\n        //if(props.item.date_completed != null) setTrashed(true);\r\n        console.log(\"near ListItem return\");\r\n        return(\r\n\r\n            (trashed || props.item.date_completed != null) ? \r\n            <> \r\n                {/*should display nothing*/}       \r\n            </>\r\n            :\r\n            <>\r\n                <button>{props.item.id}</button>\r\n                <button>{props.item.text}</button>\r\n                <button onClick={HandleTrash}>Delete</button>\r\n            </>\r\n            //() => TrashMe(this.props.item.id)\r\n        )\r\n        \r\n    }\r\n\r\n    const [i, increment] = useState(0);\r\n    \r\n    const [task, setTask] = useState({\r\n        text: \"\",\r\n        date_created: null,\r\n        date_completed: null,\r\n    });\r\n    const [added, setAdded] = useState(false);\r\n    const [valid, setValid] = useState(false);\r\n    const [typing, setTyping] = useState(false);\r\n    const [showDone, toggleShow] = useState(false); //shows 'deleted' tasks\r\n\r\n   \r\n    const HandleInputChange = (event) => {\r\n        setTask({...task,\r\n            text: event.target.value,\r\n            date_created: new Date() });\r\n        setTyping(true);\r\n        //console.log(task);\r\n    } \r\n\r\n    // when button/enter is pressed, check it has text and set true\r\n    const HandleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(task.text) setValid(true);\r\n        setAdded(true);\r\n        appendItem(task);\r\n        ResetInput(task);\r\n    }\r\n\r\n    // array of tasks TO-DO\r\n    var [itemsdo, setItems] = useState([]);\r\n\r\n    //mapping array of items to do\r\n    const listitemstodo = itemsdo.map(item => (\r\n        <li key={item.id}>\r\n            <ListItem key={item.id} item={item}></ListItem>\r\n        </li>\r\n    ))\r\n\r\n    // array of tasks DONE\r\n    var [itemsdone, setDoneItems] = useState([]);\r\n\r\n    //mapping array of items to do\r\n    const listitemsdone = itemsdone.map(item => (\r\n        <li key={item.id}>\r\n            <ListItem key={item.id} item={item}></ListItem>\r\n        </li>\r\n    ))\r\n\r\n    const appendItem = (task) => {\r\n        setItems([ ...itemsdo, {\r\n            id: i,//itemsdo.length,\r\n            text: task.text,\r\n            date_created: task.date_created,\r\n            date_completed: task.date_completed,\r\n        }])\r\n\r\n        increment(i + 1); //establishing next key/ID\r\n        console.log(\"increment\");\r\n        console.log(i);\r\n    }\r\n\r\n    const ResetInput = (task) => {\r\n        setTask({...task,\r\n            text: \"\",\r\n            date_created: null });\r\n        setAdded(false);\r\n        setTyping(false);\r\n    }\r\n\r\n    console.log(\"near AddItem return\");\r\n    return(\r\n        <>\r\n        <div className='Adding'>\r\n            <form className='sumthin' onSubmit={HandleSubmit}>\r\n                {(added || !typing) && valid ? <div className='success-message'>Task successfully added!</div> : null}\r\n                \r\n                <input\r\n                    onChange={HandleInputChange}\r\n                    required='required'\r\n                    value={task.text}\r\n                    placeholder='add new task'\r\n                    className='adding-box'/>\r\n                <button type='submit'>Add</button>\r\n                <br/>\r\n                {added && !task.text ? <span>must not be empty</span> : null}\r\n\r\n            </form>\r\n        </div>\r\n        <ul>\r\n            {listitemstodo}\r\n        </ul>\r\n\r\n        <br/>\r\n        <button onClick={() => toggleShow(!showDone)}>{(showDone) ? \"Don't show\" : \"Show completed tasks\"}</button>\r\n        {console.log(showDone)}\r\n        {(showDone) && //inline 'IF' statement for showing list of deleted tasks\r\n            <ul>\r\n                {listitemsdone}\r\n            </ul>\r\n        }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddItem;\r\n","C:\\Users\\javi0\\Documents\\practicalWork\\practical-work-t02\\frontend\\src\\components\\pages\\Home.js",[],"C:\\Users\\javi0\\Documents\\practicalWork\\practical-work-t02\\frontend\\src\\components\\Hero.js",[],"C:\\Users\\javi0\\Documents\\practicalWork\\practical-work-t02\\frontend\\src\\components\\Button.js",[],["65","66"],{"ruleId":"67","severity":1,"message":"68","line":5,"column":8,"nodeType":"69","messageId":"70","endLine":5,"endColumn":23},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"67","severity":1,"message":"75","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"76","line":1,"column":27,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"77","line":1,"column":38,"nodeType":"69","messageId":"70","endLine":1,"endColumn":44},{"ruleId":"67","severity":1,"message":"78","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":20},{"ruleId":"67","severity":1,"message":"79","line":5,"column":35,"nodeType":"69","messageId":"70","endLine":5,"endColumn":41},{"ruleId":"67","severity":1,"message":"80","line":5,"column":43,"nodeType":"69","messageId":"70","endLine":5,"endColumn":48},{"ruleId":"67","severity":1,"message":"81","line":6,"column":8,"nodeType":"69","messageId":"70","endLine":6,"endColumn":12},{"ruleId":"82","severity":1,"message":"83","line":15,"column":15,"nodeType":"84","endLine":21,"endColumn":6},{"ruleId":"82","severity":1,"message":"85","line":21,"column":8,"nodeType":"86","endLine":21,"endColumn":10,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":24,"column":5,"nodeType":"90","messageId":"91","endLine":24,"endColumn":23},{"ruleId":"67","severity":1,"message":"92","line":30,"column":19,"nodeType":"69","messageId":"70","endLine":30,"endColumn":26},{"ruleId":"67","severity":1,"message":"93","line":17,"column":10,"nodeType":"69","messageId":"70","endLine":17,"endColumn":20},{"ruleId":"67","severity":1,"message":"94","line":18,"column":10,"nodeType":"69","messageId":"70","endLine":18,"endColumn":20},{"ruleId":"95","severity":1,"message":"96","line":41,"column":7,"nodeType":"97","endLine":41,"endColumn":105},{"ruleId":"95","severity":1,"message":"96","line":52,"column":9,"nodeType":"97","endLine":52,"endColumn":76},{"ruleId":"67","severity":1,"message":"98","line":1,"column":26,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"99","line":110,"column":21,"nodeType":"69","messageId":"70","endLine":110,"endColumn":33},{"ruleId":"71","replacedBy":"100"},{"ruleId":"73","replacedBy":"101"},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["102"],"no-negated-in-lhs",["103"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'DropdownMenu' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Home' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["104"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'loading' is assigned a value but never used.","'activeMenu' is assigned a value but never used.","'menuHeight' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useReducer' is defined but never used.","'setDoneItems' is assigned a value but never used.",["102"],["103"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [url]",{"range":"107","text":"108"},[590,592],"[url]"]